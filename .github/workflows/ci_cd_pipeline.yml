on:
  workflow_dispatch:
    inputs:
       docker:
         description: 'Build docker image'
         type: choice
         options:
         - build image
         - N/A
       action:
         description: 'Terraform apply or destroy'
         type: choice
         options:
         - apply
         - destroy
jobs:
  build:
    if: ${{ github.event.inputs.docker == 'build image' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: |
          cd umami
          docker build . --file Dockerfile --tag kadonne55/cloud_computing:latest
      - name: Push image to Docker hub
        run: |
          docker login -u kadonne55 -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push kadonne55/cloud_computing:latest
  terraform_apply:
    name: "Terraform_apply"
    needs: build
    if: ${{ github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve 

      - name: Log into EC2 and deploy Docker
        env:
          PRIVATE_KEY: ${{ secrets.EC2_KEY }}
        run: |
          PUBLIC_IP=$(terraform output -raw public_ip | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1)
          echo "$PRIVATE_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          sleep 5
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@$PUBLIC_IP <<EOF
          git clone https://github.com/csci-4452-spring25/team-8.git
          cd team-8/umami
          sleep 1
          sudo apt-get update
          sudo apt install docker.io -y
          sudo systemctl start docker
          sudo mkdir -p /usr/local/lib/docker/cli-plugins
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
          sudo docker compose down
          sudo docker compose up -d
          sudo docker ps 
          echo "public ip = $PUBLIC_IP"
  
  terraform_destroy:
    name: "Terraform_destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        id: destroy
        working-directory: terraform/
        run: terraform destroy -auto-approve 
